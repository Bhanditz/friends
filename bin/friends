#!/usr/bin/env ruby

require "gli"

require "friends/introvert"
require "friends/version"

include GLI::App

program_desc "Spend time with the people you care about. Introvert-tested. "\
  "Extrovert-approved."

version Friends::VERSION

subcommand_option_handling :normal
arguments :strict

desc "Quiet output messages"
switch [:quiet], negatable: false

desc "Set the location of the friends file"
default_value "./friends.md"
arg_name "FILENAME"
flag [:filename]

desc "Force a clean write of the friends file"
switch [:clean], negatable: false

desc "Lists friends or activities"
command :list do |c|
  c.desc "List all friends"
  c.command :friends do |list_friends|
    list_friends.action do
      puts @introvert.list_friends
    end
  end

  c.desc "List favorite friends"
  c.command :favorites do |list_favorites|
    list_favorites.action do
      favorites = @introvert.list_favorites
      puts "Favorite Friends:"
      num = 0
      favorites.each { |name| puts "#{"#{num += 1}.".ljust(2)} #{name}" }
    end
  end

  c.desc "Lists all activities"
  c.command :activities do |list_activities|
    list_activities.arg_name "NAME"
    list_activities.flag [:with]
    list_activities.action do |_, options|
      puts @introvert.list_activities(with: options[:with])
    end
  end
end

desc "Adds a friend or activity"
command :add do |c|
  c.desc "Adds a friend"
  c.arg_name "NAME"
  c.command :friend do |add_friend|
    add_friend.action do |_, _, args|
      friend = @introvert.add_friend(name: args.first)
      @message = "Friend added: \"#{friend.name}\""
    end
  end

  c.desc "Adds an activity"
  c.arg_name "DESCRIPTION"
  c.command :activity do |add_activity|
    add_activity.action do |_, _, args|
      activity = @introvert.add_activity(serialization: args.first)
      @message = "Activity added: \"#{activity.display_text}\""
    end
  end
end

desc "Cleans your friends.md file"
command :clean do |c|
  c.action do
    filename = @introvert.clean
    @message = "File cleaned: \"#{filename}\""
  end
end

# Before each command, clean up all arguments and create the global Introvert.
pre do |global_options, _, options|
  final_options = global_options.merge!(options).select do |key, _|
    [:filename].include? key
  end

  @introvert = Friends::Introvert.new(final_options)
  true
end

post do |global_options|
  # After each command, clean if requested with the --clean flag.
  @introvert.clean if global_options[:clean]

  # Print the output message (if there is one) unless --quiet is passed.
  puts @message unless @message.nil? || global_options[:quiet]
end

# If an error is raised, print the message to STDERR and exit the program.
on_error do |error|
  abort "Error: #{error}"
end

# Run the program and return the exit code corresponding to the its success.
exit run(ARGV)
